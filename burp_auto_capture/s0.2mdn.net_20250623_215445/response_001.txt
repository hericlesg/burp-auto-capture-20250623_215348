HTTP/2 200 OK
Accept-Ranges: bytes
Access-Control-Allow-Origin: *
Cross-Origin-Resource-Policy: cross-origin
Cross-Origin-Opener-Policy-Report-Only: same-origin; report-to="ads-doubleclick-media"
Report-To: {"group":"ads-doubleclick-media","max_age":2592000,"endpoints":[{"url":"https://csp.withgoogle.com/csp/report-to/ads-doubleclick-media"}]}
Timing-Allow-Origin: *
Content-Length: 6660
X-Content-Type-Options: nosniff
Allow-Fenced-Frame-Automatic-Beacons: true
X-Dns-Prefetch-Control: off
Server: sffe
X-Xss-Protection: 0
Date: Mon, 23 Jun 2025 13:36:27 GMT
Expires: Tue, 23 Jun 2026 13:36:27 GMT
Cache-Control: public, max-age=31536000
Age: 40680
Last-Modified: Fri, 30 May 2025 14:09:54 GMT
Content-Type: text/html
Vary: Accept-Encoding
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000

<!DOCTYPE html>
<html>
<head>
  <title>728x90</title>
  <!-- <script src="https://s0.2mdn.net/ads/studio/Enabler.js"></script> -->
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="ad.size" content="width=728,height=90" />
  <link rel="StyleSheet" href="style.css" type="text/css" />
<script type="text/javascript">
    
  (function() {
    var MAX_URL_PARAM_LENGTH = 34;
    var CLICK_X_URL_KEY = 'nx';
    var CLICK_Y_URL_KEY = 'ny';
    var CREATIVE_DIMENSIONS_KEY = 'dim';
    var AD_URL_PARAM = '&adurl=';

    var relegateNavigation = '';
    var urlParamMap = {};

    var isNewtonTokenSet = false;
    var isTurtleXAdClick = false;
    var reportingIds = {};

    urlParamMap[CLICK_X_URL_KEY] = null;
    urlParamMap[CLICK_Y_URL_KEY] = null;
    urlParamMap[CREATIVE_DIMENSIONS_KEY] = null;

    var handleClickTagMessage = function(e) {
      try {
        var eventData = JSON.parse(e.data);
      } catch (err) {
        return;
      }
      if (eventData.isInitClickTag) {
        if (eventData.clickTags) {
          for (var i = 0; i < eventData.clickTags.length; i++) {
            var clkTag = eventData.clickTags[i];
            window[clkTag.name] = clkTag.url;

            if (clkTag.eTldPlusOne) {
              eTldPlusOnes[clkTag.url] = clkTag.eTldPlusOne;
            }
            if (clkTag.reportingId) {
              reportingIds[clkTag.url] = clkTag.reportingId;
            }
          }
        } else if (eventData.clickTag) {
          window.clickTag = eventData.clickTag;
        }
        relegateNavigation = eventData.relegateNavigation;
      }
      if (isNewtonEnabled(eventData) && !isNewtonTokenSet) {
        var newtonOt2Token = eventData.newtonOt2Token;
        enableAttributionReportingApi(newtonOt2Token);
      }
      if (eventData.isTurtleXAdClick) {
        isTurtleXAdClick = true;
      }
    };

    var isNewtonEnabled = function(eventData) {
      return 'newtonOt2Token' in eventData;
    }

    var enableAttributionReportingApi = function(originTrialToken) {
      if (/Chrome/.test(window.navigator.userAgent)) {
        var meta = document.createElement('meta');
        meta.httpEquiv = 'origin-trial';
        meta.content = String(originTrialToken);
        document.getElementsByTagName('head')[0].appendChild(meta);
        isNewtonTokenSet = true;
      }
    };

    var storeClickCoordinates = function(e) {
      urlParamMap[CLICK_X_URL_KEY] = Math.round(e.clientX);
      urlParamMap[CLICK_Y_URL_KEY] = Math.round(e.clientY);
    };

    var getCreativeDimensions = function() {
      return window.innerWidth + 'x' + window.innerHeight;
    }

    var getExitClickParams = function(e) {
      urlParamMap[CREATIVE_DIMENSIONS_KEY] = getCreativeDimensions();

      var exitParams = '';
      for (var key in urlParamMap) {
        exitParams += '&' + key + '=';
        if (urlParamMap[key] !== null) {
          exitParams += urlParamMap[key];
        }
      }
      return exitParams;
    }

    var appendExitClickParams = function(url) {
      var adUrlIndex = url.toLowerCase().indexOf(AD_URL_PARAM);
      var paramsToBeAdded = getExitClickParams();
      if (adUrlIndex > -1 && paramsToBeAdded.length <= MAX_URL_PARAM_LENGTH) {
        url = url.substr(0, adUrlIndex) + paramsToBeAdded +
          url.substr(adUrlIndex);
      };
      return url;
    };

    if (open.call) {
      window.open = function(open) {
        return function(url, name, features) {
          if (isTurtleXAdClick && !!reportingIds[url]) {
            var message = {
              'reportingId': reportingIds[url],
              'clickX': urlParamMap[CLICK_X_URL_KEY],
              'clickY': urlParamMap[CLICK_Y_URL_KEY],
              'creativeDims': getCreativeDimensions()
              };
            parent.postMessage(JSON.stringify(message), '*');
          }
          url = appendExitClickParams(url);
          if (relegateNavigation === 'parent') {
            var message = {'clickTag': url, 'isPostClickTag': true};
            parent.postMessage(JSON.stringify(message), '*');
          } else {
            var args = [url, name];
            var windowFeatures = '';

            if (features) {
              windowFeatures = windowFeatures.concat(features);
            }
            if (isNewtonTokenSet &&
                !!document.featurePolicy?.allowedFeatures().includes(
                  'attribution-reporting')) {
              if (features) {
                if (!features.includes('attributionsrc')) {
                  windowFeatures = windowFeatures.concat(features, ', attributionsrc');
                }
              } else {
                windowFeatures = windowFeatures.concat('attributionsrc');
              }
            }

            if (windowFeatures) {
              args.push(windowFeatures);
            }
            open.apply(window,args);
          }
        };
      }(window.open);
    }

    if (window.addEventListener) {
      window.addEventListener(
          'message', handleClickTagMessage, false);
      window.addEventListener('mousedown', storeClickCoordinates, true);
    } else {
      window.attachEvent('onmessage', handleClickTagMessage);
    }
  })();
    
  </script></head>
<script src="https://cdnjs.cloudflare.com/ajax/libs/lottie-web/5.12.1/lottie.min.js"></script>
<script type="text/javascript">
  var clickTag = "";
</script>
  <body>
    <div id="border"></div>
    <div id="container">
      <div id="bg2" class="fsize"></div>
      <div id="c11" class="fL c1 fsize copy hide"></div>
      <div id="c12" class="fL c1 fsize copy hide"></div>
      <div id="c13" class="fL c1 fsize copy hide"></div>
      <div id="c2" class="fL fsize copy hide"></div>
      <div id="c3" class="fL fsize copy hide"></div>
      <div id="bellboy2" class="fsize hide"></div>
      <div id="bellboy3" class="fsize hide"></div>
      <div id="speechline1" class="fsize hide"></div>
      <div id="speechline2" class="fsize hide"></div>
      <div id="card" class=""></div>
      <div id="mask" class=""></div>

      <div id="logo1" class="logo1 fsize"></div>
      <div id="logo2" class="logo1 fsize hide"></div>
      <div id="cta1" class=" fsize hide"></div>
      <div id="tac" class=" fsize hide"></div>
      <div id="lottie-container-2"></div>
      <!-- insert elements here -->
      <!-- end -->
      <!-- <div id="guide" class="fsize"></div> -->
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.19.1/TweenMax.min.js"></script>
  <script type="module" src="main.js"></script>
  </body>                    
</html>
        